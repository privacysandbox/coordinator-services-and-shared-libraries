build --announce_rc
build --verbose_failures
build --color=yes
build --config=clang
build --config=java
build --test_output=errors

# Required for io_bazel_rules_docker. Reference:
# https://github.com/bazelbuild/rules_docker/issues/2275
common --@io_bazel_rules_docker//transitions:enable=false

build:cpp --client_env=BAZEL_CXXOPTS=-std=c++20
build:cpp --cxxopt=-std=c++20

# Ensures binary compatibility with OpenTelemetry ABI version 2.
build:cpp --@io_opentelemetry_cpp//api:abi_version_no=2

# Don't use opentelemetry-cppâ€™s copy of Abseil
# https://github.com/open-telemetry/opentelemetry-cpp/pull/1172
# https://github.com/open-telemetry/opentelemetry-cpp/blob/main/examples/otlp/README.md#additional-notes-regarding-abseil-library
# https://github.com/open-telemetry/opentelemetry-cpp/issues/1042
build:cpp --@io_opentelemetry_cpp//api:with_abseil=true

build:clang --config=cpp
build:clang --cxxopt=-fbracket-depth=512

# Force bazel to use specific JDK, otherwise JDK may not be predictable
build:java --java_language_version=11
build:java --java_runtime_version=remotejdk_11
build:java --@rules_jvm_external//settings:stamp_manifest=false

build:asan --strip=never
build:asan --compilation_mode=dbg
build:asan --copt=-fsanitize=address
build:asan --copt=-DADDRESS_SANITIZER
build:asan --copt=-O1
build:asan --copt=-g
build:asan --copt=-fno-omit-frame-pointer
build:asan --linkopt=-fsanitize=address
build:asan --linkopt=-fuse-ld=lld
build:asan --action_env=ASAN_OPTIONS=detect_leaks=1:color=always
build:asan --custom_malloc=@bazel_tools//tools/cpp:malloc
build:asan --fission=yes

build:ubsan --strip=never
build:ubsan --copt=-fsanitize=undefined
build:ubsan --copt=-DUNDEFINED_BEHAVIOR_SANITIZER
build:ubsan --copt=-g
build:ubsan --copt=-fno-omit-frame-pointer
build:ubsan --linkopt=-fsanitize=undefined
build:ubsan --linkopt=-lubsan

build:tsan --strip=never
build:tsan --copt=-fsanitize=thread
build:tsan --copt=-fno-omit-frame-pointer
build:tsan --copt=-DGRPC_TSAN
build:tsan --copt=-g
build:tsan --linkopt=-fsanitize=thread
# This is needed to address false positive problem with abseil.
# https://github.com/google/sanitizers/issues/953
build:tsan --test_env=TSAN_OPTIONS=report_atomic_races=0

build:msan --strip=never
build:msan --copt=-fsanitize=memory
build:msan --copt=-DMEMORY_SANITIZER
build:msan --copt=-g
build:msan --copt=-fno-omit-frame-pointer
build:msan --linkopt=-fsanitize=memory

# Used to build a debug binary that can be run under lldb
build:lldb --compilation_mode=dbg
build:lldb --dynamic_mode=off
build:lldb --copt=-gpubnames
build:lldb --linkopt=-Wl

build:kythe --keep_going
build:kythe --experimental_extra_action_top_level_only
build:kythe --experimental_action_listener=@kythe_release//:extract_kzip_cxx
build:kythe --experimental_action_listener=@kythe_release//:extract_kzip_java
build:kythe --experimental_action_listener=@kythe_release//:extract_kzip_protobuf
