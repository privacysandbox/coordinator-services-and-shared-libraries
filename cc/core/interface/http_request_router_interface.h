/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#include "core/interface/http_request_route_resolver_interface.h"
#include "core/interface/http_types.h"
#include "core/interface/service_interface.h"
#include "core/interface/transaction_manager_interface.h"

namespace google::scp::core {
/**
 * @brief Abstraction to implement routing HTTP requests to an endpoint.
 */
class HttpRequestRouterInterface : public ServiceInterface {
 public:
  virtual ~HttpRequestRouterInterface() = default;
  /**
   * @brief Sends request to a destination path provided in the HttpRequest,
   * populates the response received, and finishes the context.
   *
   * Callers are expected to provide the request context populated with
   * request's headers and body. Response will be generated by the
   * implementation of the interface and populated in the context once the
   * routing and response processing is done.
   *
   * @param context
   * @return ExecutionResult
   */
  virtual ExecutionResult RouteRequest(
      AsyncContext<HttpRequest, HttpResponse>& context) noexcept = 0;
};
}  // namespace google::scp::core
