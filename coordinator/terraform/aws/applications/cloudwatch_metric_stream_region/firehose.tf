# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

resource "aws_secretsmanager_secret" "firehose" {
  name        = "${local.firehose_stream_name}-secret"
  description = "Shared secret for sending metrics to Google Cloud Monitoring."

  # New secrets versions will be generated by Cloud Watch Stream Receiver
  # Cloud Run Service at least once an hour, so there is no need for recovery.
  recovery_window_in_days = 0
}

resource "aws_kinesis_firehose_delivery_stream" "firehose_stream" {
  name        = local.firehose_stream_name
  destination = "http_endpoint"

  http_endpoint_configuration {
    url                = var.https_endpoint
    name               = "${local.firehose_stream_name}-http"
    buffering_size     = 1  # MiB
    buffering_interval = 10 # seconds
    # Firehose implements exponential backoff for retries, starting from 1s.
    # retry_duration is the duration for all retries combined.
    # https://docs.aws.amazon.com/firehose/latest/dev/httpdeliveryrequestresponse.html
    retry_duration = 120 # seconds
    role_arn       = var.firehose_role_arn
    s3_backup_mode = "FailedDataOnly"

    processing_configuration {
      enabled = false
    }

    request_configuration {
      # The Stream Receiver service doesnâ€™t support gzip decoding.
      content_encoding = "NONE"
    }

    secrets_manager_configuration {
      enabled    = true
      secret_arn = aws_secretsmanager_secret.firehose.arn
      role_arn   = var.firehose_role_arn
    }

    cloudwatch_logging_options {
      enabled         = true
      log_group_name  = "/aws/kinesisfirehose/${local.firehose_stream_name}"
      log_stream_name = "DestinationDelivery"
    }

    s3_configuration {
      bucket_arn         = aws_s3_bucket.firehose_backup.arn
      buffering_interval = 900
      buffering_size     = 1 # MiB
      prefix             = "metrics/"
      role_arn           = var.firehose_role_arn

      cloudwatch_logging_options {
        enabled         = true
        log_group_name  = "/aws/kinesisfirehose/${local.firehose_stream_name}"
        log_stream_name = "BackupDelivery"
      }
    }
  }

  server_side_encryption {
    enabled  = true
    key_type = "AWS_OWNED_CMK"
  }
}

# Kinesis Firehose - S3 error/backup bucket
resource "aws_s3_bucket" "firehose_backup" {
  bucket        = local.s3_bucket_name
  force_destroy = true
}

resource "aws_s3_bucket_lifecycle_configuration" "firehose_backup" {
  bucket = aws_s3_bucket.firehose_backup.id
  rule {
    id     = "expiration"
    status = "Enabled"

    expiration {
      days = 30
    }
  }
}

# No public access allowed to the backup bucket.
resource "aws_s3_bucket_public_access_block" "firehose_backup" {
  bucket                  = aws_s3_bucket.firehose_backup.id
  block_public_acls       = true
  block_public_policy     = true
  restrict_public_buckets = true
  ignore_public_acls      = true
}
