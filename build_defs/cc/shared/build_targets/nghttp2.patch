diff --git a/lib/config.h b/lib/config.h
new file mode 100644
index 00000000..e8aad8ea
--- /dev/null
+++ b/lib/config.h
@@ -0,0 +1,411 @@
+#ifndef GOOGLE_PRIVACY_SANDBOX__NGHTTP2_CONFIG_H_
+#define GOOGLE_PRIVACY_SANDBOX__NGHTTP2_CONFIG_H_
+
+#include <stdint.h>
+
+/* Define if building universal (internal helper macro) */
+/* #undef AC_APPLE_UNIVERSAL_BUILD */
+
+/* Define to 1 to enable debug output. */
+/* #undef DEBUGBUILD */
+
+/* Define to 1 if you have the `accept4' function. */
+#define HAVE_ACCEPT4 1
+
+/* Define to 1 if you have the <arpa/inet.h> header file. */
+#define HAVE_ARPA_INET_H 1
+
+/* Define to 1 if you have the std::atomic_* overloads for std::shared_ptr. */
+#define HAVE_ATOMIC_STD_SHARED_PTR 1
+
+/* HAVE_BOOST_* are only used by the binaries, not included here */
+/* define if the Boost library is available */
+/* #undef HAVE_BOOST */
+
+/* define if the Boost::ASIO library is available */
+/* #undef HAVE_BOOST_ASIO */
+
+/* define if the Boost::System library is available */
+/* #undef HAVE_BOOST_SYSTEM */
+
+/* define if the Boost::Thread library is available */
+/* #undef HAVE_BOOST_THREAD */
+
+/* Define to 1 if your system has a working `chown' function. */
+#define HAVE_CHOWN 1
+
+/* define if the compiler supports basic C++11 syntax */
+#define HAVE_CXX11 1
+
+/* Define to 1 if you have the declaration of `initgroups', and to 0 if you
+   don't. */
+#define HAVE_DECL_INITGROUPS 1
+
+/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
+   don't. */
+#define HAVE_DECL_STRERROR_R 1
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define HAVE_DLFCN_H 1
+
+/* Define to 1 if you have the `dup2' function. */
+#define HAVE_DUP2 1
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#define HAVE_FCNTL_H 1
+
+/* Define to 1 if you have the `fork' function. */
+#define HAVE_FORK 1
+
+/* Define to 1 if you have the `getcwd' function. */
+#define HAVE_GETCWD 1
+
+/* Define to 1 if you have the `getpwnam' function. */
+#define HAVE_GETPWNAM 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* HAVE_JANSSON only used by the binaries, not included here */
+/* Define to 1 if you have `libjansson` library. */
+/* #undef HAVE_JANSSON */
+
+/* HAVE_LIBSYSTEMD only used by the binaries, not included here */
+/* Define to 1 if you have `libsystemd` library. */
+/* #undef HAVE_LIBSYSTEMD */
+
+/* HAVE_LIBXML2 only used by the binaries, not included here */
+/* Define to 1 if you have `libxml2` library. */
+/* #undef HAVE_LIBXML2 */
+
+/* Define to 1 if you have the <limits.h> header file. */
+#define HAVE_LIMITS_H 1
+
+/* Define to 1 if you have the `localtime_r' function. */
+#define HAVE_LOCALTIME_R 1
+
+/* Define to 1 if you have the `memchr' function. */
+#define HAVE_MEMCHR 1
+
+/* Define to 1 if you have the `memmove' function. */
+#define HAVE_MEMMOVE 1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the `memset' function. */
+#define HAVE_MEMSET 1
+
+/* Define to 1 if you have the `mkostemp' function. */
+#define HAVE_MKOSTEMP 1
+
+/* Define to 1 if you have `mruby` library. */
+/* #undef HAVE_MRUBY */
+
+/* Define to 1 if you have the <netdb.h> header file. */
+#define HAVE_NETDB_H 1
+
+/* Define to 1 if you have the <netinet/in.h> header file. */
+#define HAVE_NETINET_IN_H 1
+
+/* HAVE_NEVERBLEED is only used by the binaries, not included here */
+/* Define to 1 if you have `neverbleed` library. */
+/* #undef HAVE_NEVERBLEED */
+
+/* Define to 1 if the system has the type `ptrdiff_t'. */
+#define HAVE_PTRDIFF_T 1
+
+/* Define to 1 if you have the <pwd.h> header file. */
+#define HAVE_PWD_H 1
+
+/* If available, contains the Python version number currently in use. */
+#define HAVE_PYTHON "2.7"
+
+/* Define to 1 if struct sockaddr_in6 has sin6_len member. */
+/* #undef HAVE_SOCKADDR_IN6_SIN6_LEN */
+
+/* Define to 1 if struct sockaddr_in has sin_len member. */
+/* #undef HAVE_SOCKADDR_IN_SIN_LEN */
+
+/* Define to 1 if you have the `socket' function. */
+#define HAVE_SOCKET 1
+
+/* Define to 1 if you have the `sqrt' function. */
+/* #undef HAVE_SQRT */
+
+/* Define to 1 if you have the <stddef.h> header file. */
+#define HAVE_STDDEF_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the `std::future`. */
+#define HAVE_STD_FUTURE 1
+
+/* Define to 1 if you have the `std::map::emplace`. */
+#define HAVE_STD_MAP_EMPLACE 1
+
+/* Define to 1 if you have the `strchr' function. */
+#define HAVE_STRCHR 1
+
+/* Define to 1 if you have the `strdup' function. */
+#define HAVE_STRDUP 1
+
+/* Define to 1 if you have the `strerror' function. */
+#define HAVE_STRERROR 1
+
+/* Define to 1 if you have the `strerror_r' function. */
+#define HAVE_STRERROR_R 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the `strndup' function. */
+#define HAVE_STRNDUP 1
+
+/* Define to 1 if you have the `strstr' function. */
+#define HAVE_STRSTR 1
+
+/* Define to 1 if you have the `strtol' function. */
+#define HAVE_STRTOL 1
+
+/* Define to 1 if you have the `strtoul' function. */
+#define HAVE_STRTOUL 1
+
+/* Define to 1 if you have `struct tm.tm_gmtoff` member. */
+#define HAVE_STRUCT_TM_TM_GMTOFF 1
+
+/* Define to 1 if you have the <syslog.h> header file. */
+#define HAVE_SYSLOG_H 1
+
+/* Define to 1 if you have the <sys/socket.h> header file. */
+#define HAVE_SYS_SOCKET_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#define HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have thread_local storage specifier. */
+#define HAVE_THREAD_LOCAL 1
+
+/* Define to 1 if you have the `timegm' function. */
+#define HAVE_TIMEGM 1
+
+/* Define to 1 if you have the <time.h> header file. */
+#define HAVE_TIME_H 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the `vfork' function. */
+#define HAVE_VFORK 1
+
+/* Define to 1 if you have the <vfork.h> header file. */
+/* #undef HAVE_VFORK_H */
+
+/* Define to 1 if `fork' works. */
+#define HAVE_WORKING_FORK 1
+
+/* Define to 1 if `vfork' works. */
+#define HAVE_WORKING_VFORK 1
+
+/* Define to 1 if you have the `_Exit' function. */
+#define HAVE__EXIT 1
+
+/* Define to the sub-directory where libtool stores uninstalled libraries. */
+/* #undef LT_OBJDIR ".libs/" */
+
+/* Define to 1 if assertions should be disabled. */
+/* #undef NDEBUG */
+
+/* use NORETURN from ABSL */
+/* Hint to the compiler that a function never return */
+#define NGHTTP2_NORETURN ABSL_ATTRIBUTE_NORETURN
+
+/* Define to 1 if you want to disable threads. */
+/* #undef NOTHREADS */
+
+/* Name of package */
+#define PACKAGE "nghttp2"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "t-tujikawa@users.sourceforge.net"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "nghttp2"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "nghttp2 1.34.0"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "nghttp2"
+
+/* Define to the home page for this package. */
+#define PACKAGE_URL ""
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "1.34.0"
+
+/* detect pointer size at compile time */
+/* The size of `int *', as computed by sizeof. */
+#if UINTPTR_MAX == UINT64_MAX
+#define SIZEOF_INT_P 8
+#elif UINTPTR_MAX == UINT32_MAX
+#define SIZEOF_INT_P 4
+#else
+#error "Unknown int pointer size"
+#endif
+
+/* only used by the binaries, not included here */
+/* The size of `time_t', as computed by sizeof. */
+/* #undef SIZEOF_TIME_T */
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Define to 1 if strerror_r returns char *. */
+#define STRERROR_R_CHAR_P 1
+
+/* Enable extensions on AIX 3, Interix.  */
+#ifndef _ALL_SOURCE
+# define _ALL_SOURCE 1
+#endif
+/* Enable GNU extensions on systems that have them.  */
+#ifndef _GNU_SOURCE
+# define _GNU_SOURCE 1
+#endif
+/* Enable threading extensions on Solaris.  */
+#ifndef _POSIX_PTHREAD_SEMANTICS
+# define _POSIX_PTHREAD_SEMANTICS 1
+#endif
+/* Enable extensions on HP NonStop.  */
+#ifndef _TANDEM_SOURCE
+# define _TANDEM_SOURCE 1
+#endif
+/* Enable general extensions on Solaris.  */
+#ifndef __EXTENSIONS__
+# define __EXTENSIONS__ 1
+#endif
+
+
+/* Version number of package */
+#define VERSION "1.34.0"
+
+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
+   significant byte first (like Motorola and SPARC, unlike Intel). */
+#if defined AC_APPLE_UNIVERSAL_BUILD
+# if defined __BIG_ENDIAN__
+#  define WORDS_BIGENDIAN 1
+# endif
+#else
+# ifndef WORDS_BIGENDIAN
+/* #  undef WORDS_BIGENDIAN */
+# endif
+#endif
+
+/* Enable large inode numbers on Mac OS X 10.5.  */
+#ifndef _DARWIN_USE_64_BIT_INODE
+# define _DARWIN_USE_64_BIT_INODE 1
+#endif
+
+/* Number of bits in a file offset, on hosts where this is settable. */
+/* #undef _FILE_OFFSET_BITS */
+
+/* Define for large files, on AIX-style hosts. */
+/* #undef _LARGE_FILES */
+
+/* Define to 1 if on MINIX. */
+/* #undef _MINIX */
+
+/* Define to 2 if the system does not provide POSIX.1 features except with
+   this defined. */
+/* #undef _POSIX_1_SOURCE */
+
+/* Define to 1 if you need to in order for `stat' and other things to work. */
+/* #undef _POSIX_SOURCE */
+
+/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
+   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
+   #define below would cause a syntax error. */
+/* #undef _UINT32_T */
+
+/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
+   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
+   #define below would cause a syntax error. */
+/* #undef _UINT64_T */
+
+/* Define for Solaris 2.5.1 so the uint8_t typedef from <sys/synch.h>,
+   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
+   #define below would cause a syntax error. */
+/* #undef _UINT8_T */
+
+/* Define to `int' if <sys/types.h> doesn't define. */
+/* #undef gid_t */
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+/* #undef inline */
+#endif
+
+/* Define to the type of a signed integer type of width exactly 16 bits if
+   such a type exists and the standard includes do not define it. */
+/* #undef int16_t */
+
+/* Define to the type of a signed integer type of width exactly 32 bits if
+   such a type exists and the standard includes do not define it. */
+/* #undef int32_t */
+
+/* Define to the type of a signed integer type of width exactly 64 bits if
+   such a type exists and the standard includes do not define it. */
+/* #undef int64_t */
+
+/* Define to the type of a signed integer type of width exactly 8 bits if such
+   a type exists and the standard includes do not define it. */
+/* #undef int8_t */
+
+/* Define to `long int' if <sys/types.h> does not define. */
+/* #undef off_t */
+
+/* Define to `int' if <sys/types.h> does not define. */
+/* #undef pid_t */
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+/* #undef size_t */
+
+/* Define to `int' if <sys/types.h> does not define. */
+/* #undef ssize_t */
+
+/* Define to `int' if <sys/types.h> doesn't define. */
+/* #undef uid_t */
+
+/* Define to the type of an unsigned integer type of width exactly 16 bits if
+   such a type exists and the standard includes do not define it. */
+/* #undef uint16_t */
+
+/* Define to the type of an unsigned integer type of width exactly 32 bits if
+   such a type exists and the standard includes do not define it. */
+/* #undef uint32_t */
+
+/* Define to the type of an unsigned integer type of width exactly 64 bits if
+   such a type exists and the standard includes do not define it. */
+/* #undef uint64_t */
+
+/* Define to the type of an unsigned integer type of width exactly 8 bits if
+   such a type exists and the standard includes do not define it. */
+/* #undef uint8_t */
+
+/* Define as `fork' if `vfork' does not work. */
+/* #undef vfork */
+#endif  // GOOGLE_PRIVACY_SANDBOX__NGHTTP2_CONFIG_H_
diff --git a/src/asio_client_session_impl.cc b/src/asio_client_session_impl.cc
index b96824dd..1d5ab925 100644
--- a/src/asio_client_session_impl.cc
+++ b/src/asio_client_session_impl.cc
@@ -577,7 +577,7 @@ const request *session_impl::submit(boost::system::error_code &ec,
 }
 
 void session_impl::shutdown() {
-  if (stopped_) {
+  if (session_ == nullptr || stopped_) {
     return;
   }
 
diff --git a/src/asio_io_service_pool.cc b/src/asio_io_service_pool.cc
index 01483664..22ab8eca 100644
--- a/src/asio_io_service_pool.cc
+++ b/src/asio_io_service_pool.cc
@@ -58,9 +58,17 @@ void io_service_pool::run(bool asynchronous) {
   // Create a pool of threads to run all of the io_services.
   for (std::size_t i = 0; i < io_services_.size(); ++i) {
     futures_.push_back(std::async(std::launch::async,
-                                  (size_t(boost::asio::io_service::*)(void)) &
-                                      boost::asio::io_service::run,
-                                  io_services_[i]));
+                                  [io_service = io_services_[i]]() {
+                                    for(;;) {
+                                      try {
+                                        auto ct = io_service->run();
+                                        return ct;
+                                      }
+                                      catch (...) {
+                                      }
+                                    }
+                                    return 0UL;
+                                  }));
   }
 
   if (!asynchronous) {
diff --git a/src/asio_server.cc b/src/asio_server.cc
index 74c92276..6d262336 100644
--- a/src/asio_server.cc
+++ b/src/asio_server.cc
@@ -188,7 +188,13 @@ void server::start_accept(tcp::acceptor &acceptor, serve_mux &mux) {
 
 void server::stop() {
   for (auto &acceptor : acceptors_) {
-    acceptor.close();
+    std::promise<void> promise;
+    GET_IO_SERVICE(acceptor).dispatch([&acceptor, &promise]() {
+      boost::system::error_code ignored_ec;
+      acceptor.close(ignored_ec);
+      promise.set_value();
+    });
+    promise.get_future().get();
   }
   io_service_pool_.stop();
 }
diff --git a/src/asio_server_connection.h b/src/asio_server_connection.h
index a9489658..7756848c 100644
--- a/src/asio_server_connection.h
+++ b/src/asio_server_connection.h
@@ -87,10 +87,15 @@ public:
   /// Start the first asynchronous operation for the connection.
   void start() {
     boost::system::error_code ec;
+    std::weak_ptr<connection> weak_self = this->shared_from_this();
 
     handler_ = std::make_shared<http2_handler>(
         GET_IO_SERVICE(socket_), socket_.lowest_layer().remote_endpoint(ec),
-        [this]() { do_write(); }, mux_);
+        [weak_self]() {
+          auto shared_connection = weak_self.lock();
+          if (!shared_connection) { return; }
+          shared_connection->do_write();
+        }, mux_);
     if (handler_->start() != 0) {
       stop();
       return;
diff --git a/src/asio_server_http2_handler.cc b/src/asio_server_http2_handler.cc
index c1fc195f..f050256f 100644
--- a/src/asio_server_http2_handler.cc
+++ b/src/asio_server_http2_handler.cc
@@ -298,7 +298,7 @@ int http2_handler::start() {
     return -1;
   }
 
-  nghttp2_settings_entry ent{NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS, 100};
+  nghttp2_settings_entry ent{NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS, 10000};
   nghttp2_submit_settings(session_, NGHTTP2_FLAG_NONE, &ent, 1);
 
   return 0;
